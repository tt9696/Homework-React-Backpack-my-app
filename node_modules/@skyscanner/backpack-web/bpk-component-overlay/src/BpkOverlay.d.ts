import type { ComponentProps, ReactNode } from 'react';
export declare const OVERLAY_TYPES: {
    readonly solidLow: "solidLow";
    readonly solidMedium: "solidMedium";
    readonly solidHigh: "solidHigh";
    readonly topLow: "topLow";
    readonly topMedium: "topMedium";
    readonly topHigh: "topHigh";
    readonly bottomLow: "bottomLow";
    readonly bottomMedium: "bottomMedium";
    readonly bottomHigh: "bottomHigh";
    readonly leftLow: "leftLow";
    readonly leftMedium: "leftMedium";
    readonly leftHigh: "leftHigh";
    readonly rightLow: "rightLow";
    readonly rightMedium: "rightMedium";
    readonly rightHigh: "rightHigh";
    readonly vignette: "vignette";
    readonly off: "off";
};
export type OverlayType = (typeof OVERLAY_TYPES)[keyof typeof OVERLAY_TYPES];
type BpkOverlayProps = {
    /**
     * **Required:** The content to be rendered within the overlay.
     */
    children: ReactNode;
    className?: string;
};
export type Props = BpkOverlayProps & ComponentProps<'div'> & {
    overlayType?: OverlayType;
    foregroundContent?: ReactNode;
};
declare const BpkOverlay: (props: Props) => JSX.Element;
export default BpkOverlay;
