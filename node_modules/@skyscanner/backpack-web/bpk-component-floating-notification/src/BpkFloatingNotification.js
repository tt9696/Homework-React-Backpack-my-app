/*
 * Backpack - Skyscanner's Design System
 *
 * Copyright 2016 Skyscanner Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import { useEffect, useState } from 'react';

// @ts-expect-error Untyped import. See `decisions/imports-ts-suppressions.md`.
import { CSSTransition } from 'react-transition-group';
import BpkAriaLive from "../../bpk-component-aria-live";
import { BUTTON_TYPES, BpkButtonV2 } from "../../bpk-component-button";
import BpkText, { TEXT_STYLES } from "../../bpk-component-text";
import { cssModules } from "../../bpk-react-utils";
import STYLES from "./BpkFloatingNotification.module.css";
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
const getClassName = cssModules(STYLES);
const BpkFloatingNotification = props => {
  const [showMessage, setShowMessage] = useState(true);
  const {
    animateOnEnter = true,
    animateOnExit = true,
    className,
    ctaText,
    hideAfter = 4000,
    icon: Icon,
    onClick,
    onExit,
    text,
    ...rest
  } = props;
  const classNames = getClassName('bpk-floating-notification', className);
  useEffect(() => {
    let timer;
    if (hideAfter) {
      timer = setTimeout(() => setShowMessage(false), hideAfter);
    }
    return () => timer && clearTimeout(timer);
  });
  return /*#__PURE__*/_jsx(CSSTransition, {
    in: showMessage,
    classNames: {
      exit: getClassName('bpk-floating-notification--leave'),
      exitActive: getClassName('bpk-floating-notification--leave-active'),
      exitDone: getClassName('bpk-floating-notification--leave-done'),
      appear: getClassName('bpk-floating-notification--appear'),
      appearActive: getClassName('bpk-floating-notification--appear-active')
    },
    timeout: 400,
    appear: animateOnEnter,
    exit: animateOnExit,
    onExited: onExit,
    children: /*#__PURE__*/_jsxs("div", {
      className: classNames,
      ...rest,
      children: [Icon && /*#__PURE__*/_jsx("div", {
        className: getClassName('bpk-floating-notification__icon'),
        children: /*#__PURE__*/_jsx(Icon, {
          "aria-hidden": true
        })
      }), /*#__PURE__*/_jsx("span", {
        className: getClassName('bpk-floating-notification__text'),
        children: /*#__PURE__*/_jsx(BpkText, {
          tagName: "p",
          textStyle: TEXT_STYLES.bodyDefault,
          children: text
        })
      }), /*#__PURE__*/_jsx(BpkAriaLive, {
        "aria-hidden": true,
        children: text
      }), ctaText && /*#__PURE__*/_jsx("div", {
        className: getClassName('bpk-floating-notification__cta'),
        children: /*#__PURE__*/_jsx(BpkButtonV2, {
          type: BUTTON_TYPES.linkOnDark,
          onClick: onClick,
          children: ctaText
        })
      })]
    })
  });
};
export default BpkFloatingNotification;