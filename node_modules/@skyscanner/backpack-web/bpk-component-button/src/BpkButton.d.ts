/// <reference types="react" />
import PropTypes from 'prop-types';
import { type Props as CommonProps } from './common-types';
export type Props = CommonProps & {
    primaryOnDark?: boolean;
    primaryOnLight?: boolean;
    secondary?: boolean;
    secondaryOnDark?: boolean;
    destructive?: boolean;
    featured?: boolean;
    link?: boolean;
    linkOnDark?: boolean;
};
declare const BpkButton: {
    (props: Props): JSX.Element;
    defaultProps: {
        primaryOnDark: boolean;
        primaryOnLight: boolean;
        secondary: boolean;
        secondaryOnDark: boolean;
        destructive: boolean;
        featured: boolean;
        link: boolean;
        linkOnDark: boolean;
        href: null;
        className: null;
        disabled: boolean;
        onClick: null;
        submit: boolean;
        large: boolean;
        iconOnly: boolean;
        blank: boolean;
        rel: null;
    };
    propTypes: {
        primaryOnDark: PropTypes.Requireable<boolean>;
        primaryOnLight: PropTypes.Requireable<boolean>;
        secondary: PropTypes.Requireable<boolean>;
        secondaryOnDark: PropTypes.Requireable<boolean>;
        destructive: PropTypes.Requireable<boolean>;
        featured: PropTypes.Requireable<boolean>;
        link: PropTypes.Requireable<boolean>;
        linkOnDark: PropTypes.Requireable<boolean>;
        children: PropTypes.Validator<NonNullable<PropTypes.ReactNodeLike>>;
        href: PropTypes.Requireable<string>;
        className: PropTypes.Requireable<string>;
        disabled: PropTypes.Requireable<boolean>;
        onClick: PropTypes.Requireable<(...args: any[]) => any>;
        submit: PropTypes.Requireable<boolean>;
        large: PropTypes.Requireable<boolean>;
        iconOnly: PropTypes.Requireable<boolean>;
        blank: PropTypes.Requireable<boolean>;
        rel: PropTypes.Requireable<string>;
    };
};
export default BpkButton;
