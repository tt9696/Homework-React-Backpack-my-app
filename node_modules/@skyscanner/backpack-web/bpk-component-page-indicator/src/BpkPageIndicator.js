/*
 * Backpack - Skyscanner's Design System
 *
 * Copyright 2016 Skyscanner Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */import PropTypes from 'prop-types';
import { cssModules } from "../../bpk-react-utils";
import NavButton, { DIRECTIONS } from "./NavButton";
import STYLES from "./BpkPageIndicator.module.css";
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
const getClassName = cssModules(STYLES);
const DISPLAYED_TOTAL = 5;
const START_SCROLL_INDEX = Math.floor(DISPLAYED_TOTAL / 2);
export const VARIANT = {
  default: 'default',
  overImage: 'overImage'
};
const BpkPageIndicator = ({
  className,
  currentIndex,
  indicatorLabel,
  nextNavLabel,
  onClick,
  prevNavLabel,
  showNav,
  totalIndicators,
  variant
}) =>
/*#__PURE__*/
// $FlowFixMe[cannot-spread-inexact] - inexact rest. See 'decisions/flowfixme.md'.
_jsx("div", {
  className: className,
  children: /*#__PURE__*/_jsxs("div", {
    className: getClassName('bpk-page-indicator', showNav && 'bpk-page-indicator__showNav'),
    children: [showNav && /*#__PURE__*/_jsx(NavButton, {
      currentIndex: currentIndex,
      onClick: onClick,
      disabled: currentIndex === 0,
      direction: DIRECTIONS.PREV,
      ariaLabel: prevNavLabel
    }), /*#__PURE__*/_jsx("div", {
      className: getClassName('bpk-page-indicator__container'),
      children: /*#__PURE__*/_jsx("div", {
        className: getClassName('bpk-page-indicator__indicators-container'),
        style: currentIndex > START_SCROLL_INDEX ? {
          '--scroll-index': totalIndicators > DISPLAYED_TOTAL ? Math.min(currentIndex - START_SCROLL_INDEX, totalIndicators - DISPLAYED_TOTAL) : 0
        } : undefined,
        children: [...Array(totalIndicators)].map((val, index) => /*#__PURE__*/_jsx("button", {
          type: "button",
          onClick: e => {
            onClick(e, index, DIRECTIONS.INDICATORS);
          },
          className: getClassName('bpk-page-indicator__indicator', `bpk-page-indicator__indicator--${variant}`, index === currentIndex && `bpk-page-indicator__indicator--active-${variant}`),
          "aria-label": `${indicatorLabel} ${index + 1}`,
          "aria-current": currentIndex === index ? 'true' : 'false'
          // eslint-disable-next-line react/no-array-index-key
        }, `indicator-${index}`))
      })
    }), showNav && /*#__PURE__*/_jsx(NavButton, {
      currentIndex: currentIndex,
      onClick: onClick,
      disabled: currentIndex === totalIndicators - 1,
      ariaLabel: nextNavLabel,
      direction: DIRECTIONS.NEXT
    })]
  })
});
BpkPageIndicator.propTypes = {
  indicatorLabel: PropTypes.string.isRequired,
  prevNavLabel: PropTypes.string.isRequired,
  nextNavLabel: PropTypes.string.isRequired,
  currentIndex: PropTypes.number.isRequired,
  totalIndicators: PropTypes.number.isRequired,
  variant: PropTypes.oneOf(Object.keys(VARIANT)),
  onClick: PropTypes.func,
  className: PropTypes.string,
  showNav: PropTypes.bool
};
BpkPageIndicator.defaultProps = {
  onClick: null,
  className: null,
  showNav: false,
  variant: VARIANT.default
};
export default BpkPageIndicator;