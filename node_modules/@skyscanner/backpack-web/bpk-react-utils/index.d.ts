/// <reference types="react" />
import { BpkDialogWrapper } from './src/BpkDialogWrapper/BpkDialogWrapper';
import Portal from './src/Portal';
import TransitionInitialMount from './src/TransitionInitialMount';
import cssModules from './src/cssModules';
import deprecated from './src/deprecated';
import { isDeviceIphone, isDeviceIpad, isDeviceIos } from './src/deviceDetection';
import isRTL from './src/isRTL';
import withDefaultProps from './src/withDefaultProps';
import wrapDisplayName from './src/wrapDisplayName';
export { Portal, TransitionInitialMount, cssModules, deprecated, withDefaultProps, wrapDisplayName, isDeviceIphone, isDeviceIpad, isDeviceIos, isRTL, BpkDialogWrapper };
declare const _default: {
    Portal: typeof Portal;
    TransitionInitialMount: ({ appearActiveClassName, appearClassName, children, transitionTimeout, }: {
        appearClassName: string;
        appearActiveClassName: string;
        transitionTimeout: number;
        children: import("react").ReactNode;
    }) => JSX.Element;
    cssModules: (styles?: {
        [key: string]: any;
    }) => (...classNames: (string | number | boolean | {} | null | undefined)[]) => string;
    deprecated: any;
    withDefaultProps: (WrappedComponent: import("react").ComponentType<any>, defaultProps: {
        [rest: string]: any;
        className?: string | undefined;
    }) => {
        ({ children, className: innerClassName, ...rest }: {
            [rest: string]: any;
            children?: import("react").ReactNode;
            className?: string | null | undefined;
        }): JSX.Element;
        displayName: string;
    };
    wrapDisplayName: (Component: string | import("react").ComponentType<any> | null, hoc: string) => string;
    isDeviceIphone: () => boolean;
    isDeviceIpad: () => boolean;
    isDeviceIos: () => boolean;
    isRTL: () => boolean;
    BpkDialogWrapper: ({ children, closeOnEscPressed, closeOnScrimClick, dialogClassName, exiting, id, isOpen, onClose, timeout, transitionClassNames, ...ariaProps }: import("./src/BpkDialogWrapper/BpkDialogWrapper").Props) => JSX.Element | null;
};
export default _default;
