/*
 * Backpack - Skyscanner's Design System
 *
 * Copyright 2016 Skyscanner Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */import PropTypes from 'prop-types';
import Transition from 'react-transition-group/Transition';
import { animations } from '@skyscanner/bpk-foundations-web/tokens/base.es6';
import BpkCloseButton from "../../bpk-component-close-button";
import { BpkButtonLink } from "../../bpk-component-link";
import { cssModules } from "../../bpk-react-utils";
import STYLES from "./BpkDrawerContent.module.css";
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
const getClassName = cssModules(STYLES);
const BpkDrawerContent = props => {
  const {
    children,
    className,
    closeLabel,
    closeOnScrimClick,
    // Unused from withScrim scrim HOC
    closeText,
    contentClassName,
    dialogRef,
    hideTitle,
    id,
    isDrawerShown,
    isIpad,
    // Unused from withScrim scrim HOC
    isIphone,
    // Unused from withScrim scrim HOC
    onClose,
    onCloseAnimationComplete,
    title,
    ...rest
  } = props;
  const drawerClassNames = [getClassName('bpk-drawer')];
  const headerClassNames = [getClassName('bpk-drawer__heading')];
  const contentClassNames = [getClassName('bpk-drawer__content')];
  if (className) {
    drawerClassNames.push(className);
  }
  if (hideTitle) {
    headerClassNames.push(getClassName('bpk-drawer__heading--visually-hidden'));
  }
  if (contentClassName) {
    contentClassNames.push(contentClassName);
  }
  const headingId = `bpk-drawer-heading-${id}`;
  return /*#__PURE__*/_jsx(Transition, {
    timeout: {
      enter: 0,
      exit: parseInt(animations.durationSm, 10)
    },
    appear: true,
    enter: false,
    exit: true,
    in: isDrawerShown,
    onExited: onCloseAnimationComplete,
    children: status =>
    /*#__PURE__*/
    // $FlowFixMe[cannot-spread-inexact] - inexact rest. See decisions/flowfixme.md
    _jsxs("section", {
      id: id,
      tabIndex: "-1",
      role: "dialog",
      "aria-labelledby": headingId,
      className: [drawerClassNames.join(' '), getClassName(`bpk-drawer--${status}`)].join(' '),
      ref: dialogRef,
      ...rest,
      children: [/*#__PURE__*/_jsxs("header", {
        className: getClassName('bpk-drawer__header'),
        children: [/*#__PURE__*/_jsx("h2", {
          id: headingId,
          className: headerClassNames.join(' '),
          children: title
        }), "\xA0", closeText ? /*#__PURE__*/_jsx(BpkButtonLink, {
          onClick: onClose,
          children: closeText
        }) : /*#__PURE__*/_jsx("div", {
          className: getClassName('bpk-drawer__close-button'),
          children: /*#__PURE__*/_jsx(BpkCloseButton, {
            label: closeLabel,
            onClick: onClose
          })
        })]
      }), /*#__PURE__*/_jsx("div", {
        className: contentClassNames.join(' '),
        children: children
      })]
    }, "dialog")
  });
};
BpkDrawerContent.propTypes = {
  children: PropTypes.node.isRequired,
  dialogRef: PropTypes.func.isRequired,
  onCloseAnimationComplete: PropTypes.func.isRequired,
  onClose: PropTypes.func.isRequired,
  id: PropTypes.string.isRequired,
  title: PropTypes.string.isRequired,
  className: PropTypes.string,
  contentClassName: PropTypes.string,
  closeLabel: PropTypes.string,
  closeText: PropTypes.string,
  isDrawerShown: PropTypes.bool,
  hideTitle: PropTypes.bool,
  closeOnScrimClick: PropTypes.bool,
  isIphone: PropTypes.bool,
  isIpad: PropTypes.bool
};
BpkDrawerContent.defaultProps = {
  className: null,
  contentClassName: null,
  closeLabel: null,
  closeText: null,
  isDrawerShown: true,
  hideTitle: false,
  closeOnScrimClick: true,
  isIphone: false,
  isIpad: false
};
export default BpkDrawerContent;