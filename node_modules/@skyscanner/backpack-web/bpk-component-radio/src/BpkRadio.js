/*
 * Backpack - Skyscanner's Design System
 *
 * Copyright 2016 Skyscanner Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */import PropTypes from 'prop-types';
import { cssModules } from "../../bpk-react-utils";
import STYLES from "./BpkRadio.module.css";
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
const getClassName = cssModules(STYLES);
const BpkRadio = props => {
  const {
    ariaLabel,
    className,
    disabled,
    label,
    name,
    valid,
    white,
    ...rest
  } = props;

  // Explicit check for false primitive value as undefined is
  // treated as neither valid nor invalid
  const isInvalid = valid === false;
  const classNames = getClassName('bpk-radio', white && 'bpk-radio--white', disabled && 'bpk-radio--disabled', white && disabled && 'bpk-radio--disabled--white', isInvalid && 'bpk-radio--invalid', className);
  return /*#__PURE__*/_jsxs("label", {
    className: classNames,
    children: [/*#__PURE__*/_jsx("input", {
      type: "radio",
      className: getClassName('bpk-radio__input'),
      name: name,
      disabled: disabled,
      "aria-label": ariaLabel || label,
      "aria-invalid": isInvalid,
      ...rest
    }), /*#__PURE__*/_jsx("div", {
      className: getClassName('bpk-radio__circle')
    }), /*#__PURE__*/_jsx("span", {
      "aria-hidden": "true",
      children: label
    })]
  });
};
BpkRadio.propTypes = {
  name: PropTypes.string.isRequired,
  label: PropTypes.node.isRequired,
  ariaLabel: PropTypes.string,
  disabled: PropTypes.bool,
  white: PropTypes.bool,
  className: PropTypes.string,
  valid: PropTypes.bool
};
BpkRadio.defaultProps = {
  ariaLabel: null,
  disabled: false,
  white: false,
  className: null,
  valid: null
};
export default BpkRadio;