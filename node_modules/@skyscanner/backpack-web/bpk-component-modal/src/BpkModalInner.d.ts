import type { ReactNode } from 'react';
export type Props = {
    id: string;
    children: ReactNode;
    wide?: boolean;
    isIphone: boolean;
    showHeader?: boolean;
    fullScreenOnMobile?: boolean;
    fullScreen?: boolean;
    padded?: boolean;
    dialogRef: (ref: HTMLElement | null | undefined) => void;
    onClose?: () => void;
    className?: string | null;
    contentClassName?: string | null;
    title?: string | null;
    closeLabel?: string;
    closeText?: string | null;
    modalStyle?: ModalStyle;
    /**
     * The accessory view allows for icons and actions to be placed in front of the main title inside the modal header. To be used with `BpkNavigationBarButtonLink`
     */
    accessoryView?: ReactNode;
};
export declare const MODAL_STYLING: {
    default: string;
    surfaceContrast: string;
};
export type ModalStyle = (typeof MODAL_STYLING)[keyof typeof MODAL_STYLING];
declare const BpkModalInner: ({ accessoryView, children, className, closeLabel, closeText, contentClassName, dialogRef, fullScreen, fullScreenOnMobile, id, isIphone, modalStyle, onClose, padded, showHeader, title, wide, }: Props) => JSX.Element;
export default BpkModalInner;
