/*
 * Backpack - Skyscanner's Design System
 *
 * Copyright 2016 Skyscanner Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// @ts-expect-error Untyped import. See `decisions/imports-ts-suppressions.md`.
import BpkCloseButton from "../../bpk-component-close-button";
// @ts-expect-error Untyped import. See `decisions/imports-ts-suppressions.md`.
import { BpkButtonLink } from "../../bpk-component-link";
import BpkNavigationBar, { BAR_STYLES } from "../../bpk-component-navigation-bar";
import { TransitionInitialMount, cssModules } from "../../bpk-react-utils";
import STYLES from "./BpkModalInner.module.css";
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
const getClassName = cssModules(STYLES);
export const MODAL_STYLING = {
  default: 'default',
  surfaceContrast: 'surface-contrast'
};
const BpkModalInner = ({
  accessoryView = null,
  children,
  className = null,
  closeLabel = '',
  closeText = null,
  contentClassName = null,
  dialogRef,
  fullScreen = false,
  fullScreenOnMobile = true,
  id,
  isIphone,
  modalStyle = MODAL_STYLING.default,
  onClose = () => null,
  padded = true,
  showHeader = true,
  title = null,
  wide = false
}) => {
  const classNames = [getClassName('bpk-modal')];
  const contentClassNames = [getClassName('bpk-modal__content')];
  const navigationStyles = [getClassName('bpk-modal__navigation')];
  classNames.push(getClassName(`bpk-modal__modal-style--${modalStyle}`));
  if (wide) {
    classNames.push(getClassName('bpk-modal--wide'));
  }
  if (className) {
    classNames.push(className);
  }
  if (fullScreen || isIphone) {
    classNames.push(getClassName('bpk-modal--full-screen'));
  } else if (fullScreenOnMobile) {
    classNames.push(getClassName('bpk-modal--full-screen-mobile'));
  }
  if (padded) {
    contentClassNames.push(getClassName('bpk-modal__content--padded'));
  }
  if (contentClassName) {
    contentClassNames.push(contentClassName);
  }
  const headingId = `bpk-modal-heading-${id}`;
  const accessoryViewFinal = accessoryView ? /*#__PURE__*/_jsx("span", {
    className: getClassName('bpk-modal__accessory-view'),
    children: accessoryView
  }) : null;
  return /*#__PURE__*/_jsx(TransitionInitialMount, {
    appearClassName: getClassName('bpk-modal--appear'),
    appearActiveClassName: getClassName('bpk-modal--appear-active'),
    transitionTimeout: 300,
    children: /*#__PURE__*/_jsxs("section", {
      id: id,
      tabIndex: -1,
      role: "dialog",
      "aria-labelledby": showHeader ? headingId : undefined,
      className: classNames.join(' '),
      ref: dialogRef,
      children: [showHeader && /*#__PURE__*/_jsx("header", {
        className: getClassName('bpk-modal__header'),
        children: /*#__PURE__*/_jsx(BpkNavigationBar, {
          barStyle: modalStyle === MODAL_STYLING.surfaceContrast ? BAR_STYLES.onDark : BAR_STYLES.default,
          id: headingId,
          className: navigationStyles.join(' '),
          title: /*#__PURE__*/_jsx("h2", {
            id: headingId,
            className: getClassName('bpk-modal__heading'),
            children: title
          }),
          leadingButton: accessoryViewFinal,
          trailingButton: closeText ? /*#__PURE__*/_jsx(BpkButtonLink, {
            onClick: onClose,
            onDark: modalStyle === MODAL_STYLING.surfaceContrast,
            children: closeText
          }) : /*#__PURE__*/_jsx(BpkCloseButton, {
            label: closeLabel,
            onClick: onClose,
            onDark: modalStyle === MODAL_STYLING.surfaceContrast
          })
        })
      }), /*#__PURE__*/_jsx("div", {
        className: contentClassNames.join(' '),
        children: children
      })]
    })
  });
};
export default BpkModalInner;