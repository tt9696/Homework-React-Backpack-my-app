import type { ComponentProps, ReactNode, SyntheticEvent } from 'react';
export declare const CHIP_TYPES: {
    readonly default: "default";
    readonly onDark: "on-dark";
    readonly onImage: "on-image";
};
interface ButtonProps extends Omit<ComponentProps<'button'>, 'type'> {
    onClick: (event: SyntheticEvent<HTMLButtonElement>) => void | null;
    children?: ReactNode | string;
    type?: (typeof CHIP_TYPES)[keyof typeof CHIP_TYPES];
}
export interface CommonProps extends ButtonProps {
    accessibilityLabel: string;
    disabled?: boolean;
    selected?: boolean;
    leadingAccessoryView?: ReactNode;
    trailingAccessoryView?: ReactNode;
}
export {};
