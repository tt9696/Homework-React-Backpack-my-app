import type { FunctionComponent, ReactNode } from 'react';
export declare const ALERT_TYPES: {
    readonly SUCCESS: "success";
    readonly WARNING: "warning";
    readonly ERROR: "error";
    readonly INFO: "info";
};
export declare const STYLE_TYPES: {
    DEFAULT: string;
    ON_CONTRAST: string;
};
export type AlertTypeValue = (typeof ALERT_TYPES)[keyof typeof ALERT_TYPES];
export type StyleTypeValue = (typeof STYLE_TYPES)[keyof typeof STYLE_TYPES];
export type CommonProps = {
    type?: AlertTypeValue;
    message: ReactNode | string;
    animateOnEnter?: boolean;
    animateOnLeave?: boolean;
    show?: boolean;
    bannerClassName?: string | null;
    icon?: FunctionComponent<any> | null;
    style?: StyleTypeValue;
    [rest: string]: any;
};
export type OnExpandToggleHandler = ((expanded: boolean) => void) | null | undefined;
export type ExpandableBannerAction = {
    title: string;
    callback: () => void;
} | null | undefined;
export type OnDismissHandler = (() => void) | null | undefined;
export type OnHideHandler = (() => void) | null | undefined;
