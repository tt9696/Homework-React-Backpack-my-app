import type { SyntheticEvent, ReactNode } from "react";
interface CommonProps {
    actionText?: string;
    children: ReactNode;
    closeLabel?: string;
    closeOnEscPressed?: boolean;
    closeOnScrimClick?: boolean;
    id: string;
    onAction?: () => void;
    onClose: (arg0?: TouchEvent | MouseEvent | KeyboardEvent | SyntheticEvent<HTMLDialogElement, Event>, arg1?: {
        source: 'ESCAPE' | 'DOCUMENT_CLICK';
    }) => void;
    title?: string;
    wide?: boolean;
    isOpen: boolean;
}
export type Props = CommonProps & ({
    ariaLabelledby: string;
} | {
    ariaLabel: string;
});
declare const BpkBottomSheet: ({ actionText, children, closeLabel, closeOnEscPressed, closeOnScrimClick, id, isOpen, onAction, onClose, title, wide, ...ariaProps }: Props) => JSX.Element;
export default BpkBottomSheet;
