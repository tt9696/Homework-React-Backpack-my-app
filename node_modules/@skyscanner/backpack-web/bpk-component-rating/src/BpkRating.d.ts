import PropTypes from 'prop-types';
import type { ReactNode } from 'react';
import { RATING_SIZES, RATING_SCALES } from './common-types';
type ValueOf<T> = T[keyof T];
type Props = {
    ariaLabel: string;
    className?: string;
    ratingScale: ValueOf<typeof RATING_SCALES>;
    showScale?: boolean;
    size: ValueOf<typeof RATING_SIZES>;
    subtitle?: string;
    title?: string | ReactNode;
    value: string | number;
};
declare const BpkRating: {
    (props: Props): JSX.Element;
    propTypes: {
        ariaLabel: PropTypes.Validator<string>;
        value: PropTypes.Validator<NonNullable<NonNullable<string | number | null | undefined>>>;
        className: PropTypes.Requireable<string>;
        ratingScale: PropTypes.Requireable<string>;
        size: PropTypes.Requireable<string>;
        subtitle: PropTypes.Requireable<string>;
        showScale: PropTypes.Requireable<boolean>;
        title: PropTypes.Requireable<NonNullable<PropTypes.ReactNodeLike>>;
    };
    defaultProps: {
        className: null;
        ratingScale: "zeroToFive";
        size: "base";
        subtitle: null;
        showScale: boolean;
        title: null;
    };
};
export default BpkRating;
