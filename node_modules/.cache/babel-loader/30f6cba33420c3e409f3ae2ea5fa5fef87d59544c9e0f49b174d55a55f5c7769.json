{"ast":null,"code":"/*\n * Backpack - Skyscanner's Design System\n *\n * Copyright 2016 Skyscanner Ltd\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component } from 'react';\nimport { cssModules } from \"../../bpk-react-utils\";\nimport { SELECTION_TYPES } from \"./BpkCalendarDate\";\nimport { CALENDAR_SELECTION_TYPE } from \"./custom-proptypes\";\nimport { isSameDay, isSameWeek, isSameMonth, isToday, isWithinRange, startOfMonth, endOfMonth } from \"./date-utils\";\nimport STYLES from \"./BpkCalendarWeek.module.css\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst getClassName = cssModules(STYLES);\nconst shallowEqualProps = (props1, props2, propList) => {\n  let i = 0;\n  for (; i < propList.length; i += 1) {\n    if (props1[propList[i]] !== props2[propList[i]]) {\n      return false;\n    }\n  }\n  return true;\n};\nfunction or(total, bool) {\n  return total || bool;\n}\n\n/**\n * Determines if the current date is selected\n * @param {Date} date the current date from the calendar\n * @param {Object} selectionConfiguration the current selection configuration\n * @returns {Boolean} true is selected and false if not\n */\nfunction getSelectedDate(date, selectionConfiguration) {\n  let startDate;\n  let endDate;\n  if (selectionConfiguration.type === CALENDAR_SELECTION_TYPE.single) {\n    startDate = selectionConfiguration.date;\n  } else {\n    startDate = selectionConfiguration.startDate;\n    endDate = selectionConfiguration.endDate;\n  }\n  const sameStartDay = startDate && isSameDay(date, startDate);\n  const sameEndDay = endDate && isSameDay(date, endDate);\n  if (startDate && endDate && (sameStartDay || sameEndDay || isWithinRange(date, {\n    start: startDate,\n    end: endDate\n  })) || startDate && !endDate && sameStartDay || sameStartDay) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Gets the correct selection type for the current date\n * @param {Date} date the current date of the calendar\n * @param {Object} selectionConfiguration the current selection configuration\n * @param {Function} formatDateFull function to format dates\n * @param {Date} month the current month of the calendar\n * @param {Number} weekStartsOn index of the first day of the week\n * @param {Boolean} ignoreOutsideDate ignore date outside current month\n * @returns {String} selection type to be passed to the date\n */\nfunction getSelectionType(date, selectionConfiguration, formatDateFull, month, weekStartsOn, ignoreOutsideDate) {\n  const {\n    endDate,\n    startDate\n  } = selectionConfiguration.type === CALENDAR_SELECTION_TYPE.range ? selectionConfiguration : {\n    startDate: null,\n    endDate: null\n  };\n  const sameStartDay = startDate && isSameDay(date, startDate);\n  const sameEndDay = endDate && isSameDay(date, endDate);\n  const rangeDates = startDate && endDate;\n  const isEmptyCell = !isSameMonth(date, month) && ignoreOutsideDate;\n  if (selectionConfiguration.type === CALENDAR_SELECTION_TYPE.single && selectionConfiguration.date && (selectionConfiguration.date === formatDateFull(date) || formatDateFull(selectionConfiguration.date) === formatDateFull(date))) {\n    return SELECTION_TYPES.single;\n  }\n  if (selectionConfiguration.type === CALENDAR_SELECTION_TYPE.range) {\n    if (startDate && !endDate && sameStartDay || rangeDates && sameStartDay && sameEndDay) {\n      return SELECTION_TYPES.single;\n    }\n    if (isEmptyCell && rangeDates && (isSameWeek(startDate, startOfMonth(startDate), {\n      weekStartsOn\n    }) && isSameWeek(date, startDate, {\n      weekStartsOn\n    }) || isSameWeek(endDate, endOfMonth(endDate), {\n      weekStartsOn\n    }) && isSameWeek(date, endDate, {\n      weekStartsOn\n    }))) {\n      return SELECTION_TYPES.none;\n    }\n    if (isEmptyCell && rangeDates && !isSameMonth(startDate, endDate) && (isSameWeek(startDate, endOfMonth(startDate), {\n      weekStartsOn\n    }) && isSameWeek(date, startDate, {\n      weekStartsOn\n    }) || isSameWeek(endDate, startOfMonth(endDate), {\n      weekStartsOn\n    }) && isSameWeek(date, endDate, {\n      weekStartsOn\n    }))) {\n      return SELECTION_TYPES.middle;\n    }\n    if (rangeDates && isWithinRange(date, {\n      start: startDate,\n      end: endDate\n    }) && !sameStartDay && !sameEndDay) {\n      return SELECTION_TYPES.middle;\n    }\n    if (startDate && formatDateFull(startDate) === formatDateFull(date)) {\n      return SELECTION_TYPES.start;\n    }\n    if (endDate && formatDateFull(endDate) === formatDateFull(date)) {\n      return SELECTION_TYPES.end;\n    }\n  }\n  return SELECTION_TYPES.none;\n}\n\n/**\n * Handles changing selected date when in single mode\n * @param {Object} props current props\n * @param {Object} nextProps next props as the component is updating\n * @returns {Boolean} based on if the date has changed\n */\nconst singleDateHandler = (props, nextProps) => {\n  const currentSelectConfig = props.selectionConfiguration;\n  const nextSelectConfig = nextProps.selectionConfiguration;\n  if ((nextSelectConfig.date && isSameWeek(nextSelectConfig.date, nextProps.dates[0], {\n    weekStartsOn: nextProps.weekStartsOn\n  }) || currentSelectConfig.date && isSameWeek(currentSelectConfig.date, props.dates[0], {\n    weekStartsOn: props.weekStartsOn\n  })) && currentSelectConfig.date !== nextSelectConfig.date) {\n    return true;\n  }\n  return false;\n};\n\n/**\n * Handles changing selected date when in range mode\n * @param {Object} props current props\n * @param {Object} nextProps next props as the component is updating\n * @returns {Boolean} based on if the date has changed\n */\nconst rangeDateHandler = (props, nextProps) => {\n  const {\n    endDate,\n    startDate\n  } = props.selectionConfiguration;\n  const {\n    endDate: nextEndDate,\n    startDate: nextStartDate\n  } = nextProps.selectionConfiguration;\n  const startDateChanged = startDate && nextStartDate && !isSameDay(startDate, nextStartDate);\n  const endDateChanged = endDate && nextEndDate && !isSameDay(endDate, nextEndDate);\n  if (startDateChanged || endDateChanged) {\n    return true;\n  }\n  return false;\n};\n/*\n  BpkCalendarWeek - table row containing a week full of DateContainer components\n*/\nclass BpkCalendarWeek extends Component {\n  static defaultProps = {\n    dateProps: {},\n    focusedDate: null,\n    ignoreOutsideDate: false,\n    maxDate: null,\n    minDate: null,\n    onDateClick: () => {},\n    onDateKeyDown: () => {},\n    selectionConfiguration: {\n      type: CALENDAR_SELECTION_TYPE.single,\n      date: null\n    },\n    cellClassName: null\n  };\n  shouldComponentUpdate(nextProps) {\n    const shallowProps = ['DateComponent', 'dateModifiers', 'formatDateFull', 'isKeyboardFocusable', 'markOutsideDays', 'markToday', 'onDateClick', 'onDateKeyDown', 'preventKeyboardFocus', 'weekStartsOn', 'dates', 'cellClassName'];\n\n    // If any of the props have changed, component should update.\n    if (!shallowEqualProps(this.props, nextProps, shallowProps)) {\n      return true;\n    }\n\n    // If focusedDate is changing, and it'll be included as part\n    // of either the week we're rendering now or the next week\n    // we'll render, component should update.\n    if ((nextProps.focusedDate && isSameWeek(nextProps.focusedDate, nextProps.dates[0], {\n      weekStartsOn: nextProps.weekStartsOn\n    }) || this.props.focusedDate && isSameWeek(this.props.focusedDate, this.props.dates[0], {\n      weekStartsOn: this.props.weekStartsOn\n    })) && this.props.focusedDate !== nextProps.focusedDate) {\n      return true;\n    }\n\n    // If selected date is changing, and it'll be included as part\n    // of either the week we're rendering now or the next week we'll\n    // render, component should update.\n    if (this.props.selectionConfiguration?.type === CALENDAR_SELECTION_TYPE.single && this.props.selectionConfiguration.date) {\n      return singleDateHandler(this.props, nextProps);\n    }\n    if (this.props.selectionConfiguration?.type === CALENDAR_SELECTION_TYPE.range) {\n      return rangeDateHandler(this.props, nextProps);\n    }\n\n    // If min date is changing, component should update.\n    if (nextProps.minDate) {\n      if (nextProps.minDate !== this.props.minDate) {\n        return true;\n      }\n      if (!isSameDay(nextProps.minDate, this.props.minDate)) {\n        return true;\n      }\n    }\n\n    // If max date is changing, component should update.\n    if (nextProps.maxDate) {\n      if (nextProps.maxDate !== this.props.maxDate) {\n        return true;\n      }\n      if (!isSameDay(nextProps.maxDate, this.props.maxDate)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  render() {\n    const {\n      DateComponent,\n      cellClassName,\n      dateModifiers,\n      dateProps,\n      focusedDate,\n      formatDateFull,\n      ignoreOutsideDate,\n      isKeyboardFocusable,\n      markOutsideDays,\n      markToday,\n      maxDate,\n      minDate,\n      month,\n      onDateClick,\n      onDateKeyDown,\n      preventKeyboardFocus,\n      selectionConfiguration,\n      weekStartsOn\n    } = this.props;\n    if (ignoreOutsideDate) {\n      const daysOutside = this.props.dates.map(date => isSameMonth(date, month));\n      const shouldRender = daysOutside.reduce(or);\n      if (!shouldRender) {\n        return null;\n      }\n    }\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: getClassName('bpk-calendar-week'),\n      children: this.props.dates.map(date => {\n        const isBlocked = minDate && maxDate ? !isWithinRange(date, {\n          start: minDate,\n          end: maxDate\n        }) : false;\n        const dateSelectionType = getSelectionType(date, selectionConfiguration, formatDateFull, month, weekStartsOn, ignoreOutsideDate);\n        return /*#__PURE__*/_jsx(DateContainer, {\n          className: cellClassName,\n          isEmptyCell: !isSameMonth(date, month) && ignoreOutsideDate,\n          isBlocked: isBlocked,\n          selectionType: dateSelectionType,\n          children: /*#__PURE__*/_jsx(DateComponent, {\n            date: date,\n            modifiers: dateModifiers,\n            \"aria-label\": formatDateFull(date),\n            onClick: onDateClick,\n            onDateKeyDown: onDateKeyDown,\n            preventKeyboardFocus: preventKeyboardFocus,\n            isKeyboardFocusable: isKeyboardFocusable,\n            isFocused: focusedDate && isSameDay(date, focusedDate),\n            isSelected: getSelectedDate(date, selectionConfiguration),\n            isBlocked: isBlocked,\n            isOutside: markOutsideDays && !isSameMonth(date, month),\n            isToday: markToday && isToday(date),\n            selectionType: dateSelectionType,\n            ...dateProps\n          })\n        }, date.getDate());\n      })\n    });\n  }\n}\n/*\n  DateContainer - one for each date in the grid; wraps the actual BpkCalendarDate (or custom) component\n*/\nconst DateContainer = ({\n  children,\n  className = null,\n  isBlocked,\n  isEmptyCell,\n  selectionType\n}) => {\n  const classNames = getClassName('bpk-calendar-week__date', `bpk-calendar-week__date--${selectionType}`, className);\n  return /*#__PURE__*/_jsx(\"div\", {\n    \"aria-hidden\": isEmptyCell || isBlocked,\n    className: classNames,\n    children: children\n  });\n};\nexport default BpkCalendarWeek;","map":{"version":3,"names":["Component","cssModules","SELECTION_TYPES","CALENDAR_SELECTION_TYPE","isSameDay","isSameWeek","isSameMonth","isToday","isWithinRange","startOfMonth","endOfMonth","STYLES","jsx","_jsx","getClassName","shallowEqualProps","props1","props2","propList","i","length","or","total","bool","getSelectedDate","date","selectionConfiguration","startDate","endDate","type","single","sameStartDay","sameEndDay","start","end","getSelectionType","formatDateFull","month","weekStartsOn","ignoreOutsideDate","range","rangeDates","isEmptyCell","none","middle","singleDateHandler","props","nextProps","currentSelectConfig","nextSelectConfig","dates","rangeDateHandler","nextEndDate","nextStartDate","startDateChanged","endDateChanged","BpkCalendarWeek","defaultProps","dateProps","focusedDate","maxDate","minDate","onDateClick","onDateKeyDown","cellClassName","shouldComponentUpdate","shallowProps","render","DateComponent","dateModifiers","isKeyboardFocusable","markOutsideDays","markToday","preventKeyboardFocus","daysOutside","map","shouldRender","reduce","className","children","isBlocked","dateSelectionType","DateContainer","selectionType","modifiers","onClick","isFocused","isSelected","isOutside","getDate","classNames"],"sources":["C:/Users/Dell/my-app/node_modules/@skyscanner/backpack-web/bpk-component-calendar/src/BpkCalendarWeek.js"],"sourcesContent":["/*\n * Backpack - Skyscanner's Design System\n *\n * Copyright 2016 Skyscanner Ltd\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component } from 'react';\nimport { cssModules } from \"../../bpk-react-utils\";\nimport { SELECTION_TYPES } from \"./BpkCalendarDate\";\nimport { CALENDAR_SELECTION_TYPE } from \"./custom-proptypes\";\nimport { isSameDay, isSameWeek, isSameMonth, isToday, isWithinRange, startOfMonth, endOfMonth } from \"./date-utils\";\nimport STYLES from \"./BpkCalendarWeek.module.css\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst getClassName = cssModules(STYLES);\nconst shallowEqualProps = (props1, props2, propList) => {\n  let i = 0;\n  for (; i < propList.length; i += 1) {\n    if (props1[propList[i]] !== props2[propList[i]]) {\n      return false;\n    }\n  }\n  return true;\n};\nfunction or(total, bool) {\n  return total || bool;\n}\n\n/**\n * Determines if the current date is selected\n * @param {Date} date the current date from the calendar\n * @param {Object} selectionConfiguration the current selection configuration\n * @returns {Boolean} true is selected and false if not\n */\nfunction getSelectedDate(date, selectionConfiguration) {\n  let startDate;\n  let endDate;\n  if (selectionConfiguration.type === CALENDAR_SELECTION_TYPE.single) {\n    startDate = selectionConfiguration.date;\n  } else {\n    startDate = selectionConfiguration.startDate;\n    endDate = selectionConfiguration.endDate;\n  }\n  const sameStartDay = startDate && isSameDay(date, startDate);\n  const sameEndDay = endDate && isSameDay(date, endDate);\n  if (startDate && endDate && (sameStartDay || sameEndDay || isWithinRange(date, {\n    start: startDate,\n    end: endDate\n  })) || startDate && !endDate && sameStartDay || sameStartDay) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Gets the correct selection type for the current date\n * @param {Date} date the current date of the calendar\n * @param {Object} selectionConfiguration the current selection configuration\n * @param {Function} formatDateFull function to format dates\n * @param {Date} month the current month of the calendar\n * @param {Number} weekStartsOn index of the first day of the week\n * @param {Boolean} ignoreOutsideDate ignore date outside current month\n * @returns {String} selection type to be passed to the date\n */\nfunction getSelectionType(date, selectionConfiguration, formatDateFull, month, weekStartsOn, ignoreOutsideDate) {\n  const {\n    endDate,\n    startDate\n  } = selectionConfiguration.type === CALENDAR_SELECTION_TYPE.range ? selectionConfiguration : {\n    startDate: null,\n    endDate: null\n  };\n  const sameStartDay = startDate && isSameDay(date, startDate);\n  const sameEndDay = endDate && isSameDay(date, endDate);\n  const rangeDates = startDate && endDate;\n  const isEmptyCell = !isSameMonth(date, month) && ignoreOutsideDate;\n  if (selectionConfiguration.type === CALENDAR_SELECTION_TYPE.single && selectionConfiguration.date && (selectionConfiguration.date === formatDateFull(date) || formatDateFull(selectionConfiguration.date) === formatDateFull(date))) {\n    return SELECTION_TYPES.single;\n  }\n  if (selectionConfiguration.type === CALENDAR_SELECTION_TYPE.range) {\n    if (startDate && !endDate && sameStartDay || rangeDates && sameStartDay && sameEndDay) {\n      return SELECTION_TYPES.single;\n    }\n    if (isEmptyCell && rangeDates && (isSameWeek(startDate, startOfMonth(startDate), {\n      weekStartsOn\n    }) && isSameWeek(date, startDate, {\n      weekStartsOn\n    }) || isSameWeek(endDate, endOfMonth(endDate), {\n      weekStartsOn\n    }) && isSameWeek(date, endDate, {\n      weekStartsOn\n    }))) {\n      return SELECTION_TYPES.none;\n    }\n    if (isEmptyCell && rangeDates && !isSameMonth(startDate, endDate) && (isSameWeek(startDate, endOfMonth(startDate), {\n      weekStartsOn\n    }) && isSameWeek(date, startDate, {\n      weekStartsOn\n    }) || isSameWeek(endDate, startOfMonth(endDate), {\n      weekStartsOn\n    }) && isSameWeek(date, endDate, {\n      weekStartsOn\n    }))) {\n      return SELECTION_TYPES.middle;\n    }\n    if (rangeDates && isWithinRange(date, {\n      start: startDate,\n      end: endDate\n    }) && !sameStartDay && !sameEndDay) {\n      return SELECTION_TYPES.middle;\n    }\n    if (startDate && formatDateFull(startDate) === formatDateFull(date)) {\n      return SELECTION_TYPES.start;\n    }\n    if (endDate && formatDateFull(endDate) === formatDateFull(date)) {\n      return SELECTION_TYPES.end;\n    }\n  }\n  return SELECTION_TYPES.none;\n}\n\n/**\n * Handles changing selected date when in single mode\n * @param {Object} props current props\n * @param {Object} nextProps next props as the component is updating\n * @returns {Boolean} based on if the date has changed\n */\nconst singleDateHandler = (props, nextProps) => {\n  const currentSelectConfig = props.selectionConfiguration;\n  const nextSelectConfig = nextProps.selectionConfiguration;\n  if ((nextSelectConfig.date && isSameWeek(nextSelectConfig.date, nextProps.dates[0], {\n    weekStartsOn: nextProps.weekStartsOn\n  }) || currentSelectConfig.date && isSameWeek(currentSelectConfig.date, props.dates[0], {\n    weekStartsOn: props.weekStartsOn\n  })) && currentSelectConfig.date !== nextSelectConfig.date) {\n    return true;\n  }\n  return false;\n};\n\n/**\n * Handles changing selected date when in range mode\n * @param {Object} props current props\n * @param {Object} nextProps next props as the component is updating\n * @returns {Boolean} based on if the date has changed\n */\nconst rangeDateHandler = (props, nextProps) => {\n  const {\n    endDate,\n    startDate\n  } = props.selectionConfiguration;\n  const {\n    endDate: nextEndDate,\n    startDate: nextStartDate\n  } = nextProps.selectionConfiguration;\n  const startDateChanged = startDate && nextStartDate && !isSameDay(startDate, nextStartDate);\n  const endDateChanged = endDate && nextEndDate && !isSameDay(endDate, nextEndDate);\n  if (startDateChanged || endDateChanged) {\n    return true;\n  }\n  return false;\n};\n/*\n  BpkCalendarWeek - table row containing a week full of DateContainer components\n*/\nclass BpkCalendarWeek extends Component {\n  static defaultProps = {\n    dateProps: {},\n    focusedDate: null,\n    ignoreOutsideDate: false,\n    maxDate: null,\n    minDate: null,\n    onDateClick: () => {},\n    onDateKeyDown: () => {},\n    selectionConfiguration: {\n      type: CALENDAR_SELECTION_TYPE.single,\n      date: null\n    },\n    cellClassName: null\n  };\n  shouldComponentUpdate(nextProps) {\n    const shallowProps = ['DateComponent', 'dateModifiers', 'formatDateFull', 'isKeyboardFocusable', 'markOutsideDays', 'markToday', 'onDateClick', 'onDateKeyDown', 'preventKeyboardFocus', 'weekStartsOn', 'dates', 'cellClassName'];\n\n    // If any of the props have changed, component should update.\n    if (!shallowEqualProps(this.props, nextProps, shallowProps)) {\n      return true;\n    }\n\n    // If focusedDate is changing, and it'll be included as part\n    // of either the week we're rendering now or the next week\n    // we'll render, component should update.\n    if ((nextProps.focusedDate && isSameWeek(nextProps.focusedDate, nextProps.dates[0], {\n      weekStartsOn: nextProps.weekStartsOn\n    }) || this.props.focusedDate && isSameWeek(this.props.focusedDate, this.props.dates[0], {\n      weekStartsOn: this.props.weekStartsOn\n    })) && this.props.focusedDate !== nextProps.focusedDate) {\n      return true;\n    }\n\n    // If selected date is changing, and it'll be included as part\n    // of either the week we're rendering now or the next week we'll\n    // render, component should update.\n    if (this.props.selectionConfiguration?.type === CALENDAR_SELECTION_TYPE.single && this.props.selectionConfiguration.date) {\n      return singleDateHandler(this.props, nextProps);\n    }\n    if (this.props.selectionConfiguration?.type === CALENDAR_SELECTION_TYPE.range) {\n      return rangeDateHandler(this.props, nextProps);\n    }\n\n    // If min date is changing, component should update.\n    if (nextProps.minDate) {\n      if (nextProps.minDate !== this.props.minDate) {\n        return true;\n      }\n      if (!isSameDay(nextProps.minDate, this.props.minDate)) {\n        return true;\n      }\n    }\n\n    // If max date is changing, component should update.\n    if (nextProps.maxDate) {\n      if (nextProps.maxDate !== this.props.maxDate) {\n        return true;\n      }\n      if (!isSameDay(nextProps.maxDate, this.props.maxDate)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  render() {\n    const {\n      DateComponent,\n      cellClassName,\n      dateModifiers,\n      dateProps,\n      focusedDate,\n      formatDateFull,\n      ignoreOutsideDate,\n      isKeyboardFocusable,\n      markOutsideDays,\n      markToday,\n      maxDate,\n      minDate,\n      month,\n      onDateClick,\n      onDateKeyDown,\n      preventKeyboardFocus,\n      selectionConfiguration,\n      weekStartsOn\n    } = this.props;\n    if (ignoreOutsideDate) {\n      const daysOutside = this.props.dates.map(date => isSameMonth(date, month));\n      const shouldRender = daysOutside.reduce(or);\n      if (!shouldRender) {\n        return null;\n      }\n    }\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: getClassName('bpk-calendar-week'),\n      children: this.props.dates.map(date => {\n        const isBlocked = minDate && maxDate ? !isWithinRange(date, {\n          start: minDate,\n          end: maxDate\n        }) : false;\n        const dateSelectionType = getSelectionType(date, selectionConfiguration, formatDateFull, month, weekStartsOn, ignoreOutsideDate);\n        return /*#__PURE__*/_jsx(DateContainer, {\n          className: cellClassName,\n          isEmptyCell: !isSameMonth(date, month) && ignoreOutsideDate,\n          isBlocked: isBlocked,\n          selectionType: dateSelectionType,\n          children: /*#__PURE__*/_jsx(DateComponent, {\n            date: date,\n            modifiers: dateModifiers,\n            \"aria-label\": formatDateFull(date),\n            onClick: onDateClick,\n            onDateKeyDown: onDateKeyDown,\n            preventKeyboardFocus: preventKeyboardFocus,\n            isKeyboardFocusable: isKeyboardFocusable,\n            isFocused: focusedDate && isSameDay(date, focusedDate),\n            isSelected: getSelectedDate(date, selectionConfiguration),\n            isBlocked: isBlocked,\n            isOutside: markOutsideDays && !isSameMonth(date, month),\n            isToday: markToday && isToday(date),\n            selectionType: dateSelectionType,\n            ...dateProps\n          })\n        }, date.getDate());\n      })\n    });\n  }\n}\n/*\n  DateContainer - one for each date in the grid; wraps the actual BpkCalendarDate (or custom) component\n*/\nconst DateContainer = ({\n  children,\n  className = null,\n  isBlocked,\n  isEmptyCell,\n  selectionType\n}) => {\n  const classNames = getClassName('bpk-calendar-week__date', `bpk-calendar-week__date--${selectionType}`, className);\n  return /*#__PURE__*/_jsx(\"div\", {\n    \"aria-hidden\": isEmptyCell || isBlocked,\n    className: classNames,\n    children: children\n  });\n};\nexport default BpkCalendarWeek;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}