{"ast":null,"code":"/*\n * Backpack - Skyscanner's Design System\n *\n * Copyright 2016 Skyscanner Ltd\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { calendarDaySize, calendarDaySpacing } from '@skyscanner/bpk-foundations-web/tokens/base.es6';\nconst CSS_UNIT_REGEX = /(^[+-]?(?:\\d*\\.)?\\d+)(.+)/i;\nconst splitToken = value => {\n  const match = value.match(CSS_UNIT_REGEX);\n  if (!match) {\n    throw new Error(`Invalid token value. Expecting a valid css unit, got ${value}`);\n  }\n  const [_, val, unit] = match;\n  return [parseFloat(val), unit];\n};\nexport const getCalendarGridWidth = (multiplier = 1) => {\n  const [sizeValue, sizeUnit] = splitToken(calendarDaySize);\n  const [spacingValue, spacingUnit] = splitToken(calendarDaySpacing);\n  if (sizeUnit !== spacingUnit) {\n    throw new Error(`'calendarDaySize' and 'calendarDaySpacing' must use the same unit. Got ${sizeUnit} and ${spacingUnit}`);\n  }\n  // @ts-expect-error TS doesn't correctly read the size and spacing values type i.e. numbers as returned by parseFloat\n  const width = multiplier * (7 * (sizeValue + 2 * spacingValue));\n  return `${width}${sizeUnit}`;\n};\nexport const getTransformStyles = transformValue => {\n  const transform = `translateX(${transformValue})`;\n  return {\n    transform,\n    msTransform: transform,\n    MozTransform: transform,\n    WebkitTransform: transform\n  };\n};\nexport const isTransitionEndSupported = () => !!(typeof window !== 'undefined' && 'TransitionEvent' in window);","map":{"version":3,"names":["calendarDaySize","calendarDaySpacing","CSS_UNIT_REGEX","splitToken","value","match","Error","_","val","unit","parseFloat","getCalendarGridWidth","multiplier","sizeValue","sizeUnit","spacingValue","spacingUnit","width","getTransformStyles","transformValue","transform","msTransform","MozTransform","WebkitTransform","isTransitionEndSupported","window"],"sources":["C:/Users/Dell/my-app/node_modules/@skyscanner/backpack-web/bpk-component-calendar/src/utils.js"],"sourcesContent":["/*\n * Backpack - Skyscanner's Design System\n *\n * Copyright 2016 Skyscanner Ltd\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { calendarDaySize, calendarDaySpacing } from '@skyscanner/bpk-foundations-web/tokens/base.es6';\nconst CSS_UNIT_REGEX = /(^[+-]?(?:\\d*\\.)?\\d+)(.+)/i;\nconst splitToken = value => {\n  const match = value.match(CSS_UNIT_REGEX);\n  if (!match) {\n    throw new Error(`Invalid token value. Expecting a valid css unit, got ${value}`);\n  }\n  const [_, val, unit] = match;\n  return [parseFloat(val), unit];\n};\nexport const getCalendarGridWidth = (multiplier = 1) => {\n  const [sizeValue, sizeUnit] = splitToken(calendarDaySize);\n  const [spacingValue, spacingUnit] = splitToken(calendarDaySpacing);\n  if (sizeUnit !== spacingUnit) {\n    throw new Error(`'calendarDaySize' and 'calendarDaySpacing' must use the same unit. Got ${sizeUnit} and ${spacingUnit}`);\n  }\n  // @ts-expect-error TS doesn't correctly read the size and spacing values type i.e. numbers as returned by parseFloat\n  const width = multiplier * (7 * (sizeValue + 2 * spacingValue));\n  return `${width}${sizeUnit}`;\n};\nexport const getTransformStyles = transformValue => {\n  const transform = `translateX(${transformValue})`;\n  return {\n    transform,\n    msTransform: transform,\n    MozTransform: transform,\n    WebkitTransform: transform\n  };\n};\nexport const isTransitionEndSupported = () => !!(typeof window !== 'undefined' && 'TransitionEvent' in window);"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,eAAe,EAAEC,kBAAkB,QAAQ,iDAAiD;AACrG,MAAMC,cAAc,GAAG,4BAA4B;AACnD,MAAMC,UAAU,GAAGC,KAAK,IAAI;EAC1B,MAAMC,KAAK,GAAGD,KAAK,CAACC,KAAK,CAACH,cAAc,CAAC;EACzC,IAAI,CAACG,KAAK,EAAE;IACV,MAAM,IAAIC,KAAK,CAAC,wDAAwDF,KAAK,EAAE,CAAC;EAClF;EACA,MAAM,CAACG,CAAC,EAAEC,GAAG,EAAEC,IAAI,CAAC,GAAGJ,KAAK;EAC5B,OAAO,CAACK,UAAU,CAACF,GAAG,CAAC,EAAEC,IAAI,CAAC;AAChC,CAAC;AACD,OAAO,MAAME,oBAAoB,GAAGA,CAACC,UAAU,GAAG,CAAC,KAAK;EACtD,MAAM,CAACC,SAAS,EAAEC,QAAQ,CAAC,GAAGX,UAAU,CAACH,eAAe,CAAC;EACzD,MAAM,CAACe,YAAY,EAAEC,WAAW,CAAC,GAAGb,UAAU,CAACF,kBAAkB,CAAC;EAClE,IAAIa,QAAQ,KAAKE,WAAW,EAAE;IAC5B,MAAM,IAAIV,KAAK,CAAC,0EAA0EQ,QAAQ,QAAQE,WAAW,EAAE,CAAC;EAC1H;EACA;EACA,MAAMC,KAAK,GAAGL,UAAU,IAAI,CAAC,IAAIC,SAAS,GAAG,CAAC,GAAGE,YAAY,CAAC,CAAC;EAC/D,OAAO,GAAGE,KAAK,GAAGH,QAAQ,EAAE;AAC9B,CAAC;AACD,OAAO,MAAMI,kBAAkB,GAAGC,cAAc,IAAI;EAClD,MAAMC,SAAS,GAAG,cAAcD,cAAc,GAAG;EACjD,OAAO;IACLC,SAAS;IACTC,WAAW,EAAED,SAAS;IACtBE,YAAY,EAAEF,SAAS;IACvBG,eAAe,EAAEH;EACnB,CAAC;AACH,CAAC;AACD,OAAO,MAAMI,wBAAwB,GAAGA,CAAA,KAAM,CAAC,EAAE,OAAOC,MAAM,KAAK,WAAW,IAAI,iBAAiB,IAAIA,MAAM,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}