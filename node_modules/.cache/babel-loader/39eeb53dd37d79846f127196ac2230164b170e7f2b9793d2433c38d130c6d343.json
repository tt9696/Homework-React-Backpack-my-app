{"ast":null,"code":"/*\n * Backpack - Skyscanner's Design System\n *\n * Copyright 2016 Skyscanner Ltd\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component } from 'react';\nimport { wrapDisplayName } from \"../../bpk-react-utils\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst KEYCODES = {\n  ENTER: 'Enter',\n  SPACEBAR: 'Space'\n};\nconst handleKeyEvent = callback => e => {\n  if (e.code === KEYCODES.ENTER || e.code === KEYCODES.SPACEBAR) {\n    e.preventDefault();\n    if (callback) {\n      callback();\n    }\n  }\n};\nconst withEventHandler = (fn, eventHandler) => e => {\n  if (fn) {\n    fn(e);\n  }\n  if (eventHandler) {\n    eventHandler(e);\n  }\n};\nconst withOpenEvents = WithOpenEventsInputComponent => {\n  class WithOpenEvents extends Component {\n    static defaultProps = {\n      // Custom props\n      isOpen: false,\n      hasTouchSupport: !!(typeof window !== 'undefined' && 'ontouchstart' in window),\n      onOpen: null,\n      // Input props\n      onClick: null,\n      onFocus: null,\n      onBlur: null,\n      onTouchEnd: null,\n      onKeyDown: null,\n      onKeyUp: null\n    };\n    constructor(props) {\n      super(props);\n      this.focusCanOpen = true;\n    }\n    handleTouchEnd = event => {\n      // preventDefault fixes an issue on Android and iOS in which the popover closes immediately\n      // because a touch event is registered on one of the dates.\n      // We can only run preventDefault when the input is already focused - otherwise it would never set\n      // focus on it, and when closing the modal/popover focus would return to the previously focused\n      // element (which is annoying if it's an autosuggest or another datepicker, for example).\n      if (document && event.target === document.activeElement) {\n        event.preventDefault();\n        if (this.props.onOpen) {\n          this.props.onOpen();\n        }\n      }\n    };\n    handleFocus = () => {\n      if (this.focusCanOpen && this.props.onOpen) {\n        this.props.onOpen();\n      }\n    };\n    handleBlur = () => {\n      // If the input loses focus when the target is open, it should not open on a subsequent focus.\n      // Fixes an issue with IE9.\n      if (this.props.isOpen) {\n        this.focusCanOpen = false;\n      } else {\n        this.focusCanOpen = true;\n      }\n    };\n    render() {\n      const {\n        className,\n        hasTouchSupport,\n        isOpen,\n        onBlur,\n        onClick,\n        onFocus,\n        onKeyDown,\n        onKeyUp,\n        onOpen,\n        onTouchEnd,\n        ...rest\n      } = this.props;\n      const eventHandlers = {\n        onClick: withEventHandler(onOpen, onClick),\n        // @ts-expect-error for some reason the type KeyboardEvent was not being recognized as\n        // a valid type to UIEvent even though it is a valid subtype type of UIEvent\n        onKeyDown: withEventHandler(handleKeyEvent(onOpen), onKeyDown)\n      };\n      if (hasTouchSupport) {\n        // Prevents the mobile keyboard from opening (iOS / Android), while not announcing it as 'read only' to a screen reader\n        eventHandlers.readOnly = 'readOnly';\n        eventHandlers['aria-readonly'] = false;\n        eventHandlers.onTouchEnd = withEventHandler(this.handleTouchEnd, onTouchEnd);\n      }\n\n      // Needed on desktop to allow the intended behaviour of opening on focus\n      // Needed on mobile as some Android devices do not trigger onClick or onTouch when TalkBack is active but do trigger onFocus\n      eventHandlers.onFocus = withEventHandler(this.handleFocus, onFocus);\n      eventHandlers.onBlur = withEventHandler(this.handleBlur, onBlur);\n      return /*#__PURE__*/_jsx(WithOpenEventsInputComponent, {\n        className: className,\n        ...eventHandlers,\n        ...rest,\n        \"data-openable\": true // This allows for conditional styling within BpkInput\n      });\n    }\n  }\n  WithOpenEvents.displayName = wrapDisplayName(WithOpenEventsInputComponent, 'withOpenEvents');\n  return WithOpenEvents;\n};\nexport default withOpenEvents;","map":{"version":3,"names":["Component","wrapDisplayName","jsx","_jsx","KEYCODES","ENTER","SPACEBAR","handleKeyEvent","callback","e","code","preventDefault","withEventHandler","fn","eventHandler","withOpenEvents","WithOpenEventsInputComponent","WithOpenEvents","defaultProps","isOpen","hasTouchSupport","window","onOpen","onClick","onFocus","onBlur","onTouchEnd","onKeyDown","onKeyUp","constructor","props","focusCanOpen","handleTouchEnd","event","document","target","activeElement","handleFocus","handleBlur","render","className","rest","eventHandlers","readOnly","displayName"],"sources":["C:/Users/Dell/my-app/node_modules/@skyscanner/backpack-web/bpk-component-input/src/withOpenEvents.js"],"sourcesContent":["/*\n * Backpack - Skyscanner's Design System\n *\n * Copyright 2016 Skyscanner Ltd\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component } from 'react';\nimport { wrapDisplayName } from \"../../bpk-react-utils\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst KEYCODES = {\n  ENTER: 'Enter',\n  SPACEBAR: 'Space'\n};\nconst handleKeyEvent = callback => e => {\n  if (e.code === KEYCODES.ENTER || e.code === KEYCODES.SPACEBAR) {\n    e.preventDefault();\n    if (callback) {\n      callback();\n    }\n  }\n};\nconst withEventHandler = (fn, eventHandler) => e => {\n  if (fn) {\n    fn(e);\n  }\n  if (eventHandler) {\n    eventHandler(e);\n  }\n};\nconst withOpenEvents = WithOpenEventsInputComponent => {\n  class WithOpenEvents extends Component {\n    static defaultProps = {\n      // Custom props\n      isOpen: false,\n      hasTouchSupport: !!(typeof window !== 'undefined' && 'ontouchstart' in window),\n      onOpen: null,\n      // Input props\n      onClick: null,\n      onFocus: null,\n      onBlur: null,\n      onTouchEnd: null,\n      onKeyDown: null,\n      onKeyUp: null\n    };\n    constructor(props) {\n      super(props);\n      this.focusCanOpen = true;\n    }\n    handleTouchEnd = event => {\n      // preventDefault fixes an issue on Android and iOS in which the popover closes immediately\n      // because a touch event is registered on one of the dates.\n      // We can only run preventDefault when the input is already focused - otherwise it would never set\n      // focus on it, and when closing the modal/popover focus would return to the previously focused\n      // element (which is annoying if it's an autosuggest or another datepicker, for example).\n      if (document && event.target === document.activeElement) {\n        event.preventDefault();\n        if (this.props.onOpen) {\n          this.props.onOpen();\n        }\n      }\n    };\n    handleFocus = () => {\n      if (this.focusCanOpen && this.props.onOpen) {\n        this.props.onOpen();\n      }\n    };\n    handleBlur = () => {\n      // If the input loses focus when the target is open, it should not open on a subsequent focus.\n      // Fixes an issue with IE9.\n      if (this.props.isOpen) {\n        this.focusCanOpen = false;\n      } else {\n        this.focusCanOpen = true;\n      }\n    };\n    render() {\n      const {\n        className,\n        hasTouchSupport,\n        isOpen,\n        onBlur,\n        onClick,\n        onFocus,\n        onKeyDown,\n        onKeyUp,\n        onOpen,\n        onTouchEnd,\n        ...rest\n      } = this.props;\n      const eventHandlers = {\n        onClick: withEventHandler(onOpen, onClick),\n        // @ts-expect-error for some reason the type KeyboardEvent was not being recognized as\n        // a valid type to UIEvent even though it is a valid subtype type of UIEvent\n        onKeyDown: withEventHandler(handleKeyEvent(onOpen), onKeyDown)\n      };\n      if (hasTouchSupport) {\n        // Prevents the mobile keyboard from opening (iOS / Android), while not announcing it as 'read only' to a screen reader\n        eventHandlers.readOnly = 'readOnly';\n        eventHandlers['aria-readonly'] = false;\n        eventHandlers.onTouchEnd = withEventHandler(this.handleTouchEnd, onTouchEnd);\n      }\n\n      // Needed on desktop to allow the intended behaviour of opening on focus\n      // Needed on mobile as some Android devices do not trigger onClick or onTouch when TalkBack is active but do trigger onFocus\n      eventHandlers.onFocus = withEventHandler(this.handleFocus, onFocus);\n      eventHandlers.onBlur = withEventHandler(this.handleBlur, onBlur);\n      return /*#__PURE__*/_jsx(WithOpenEventsInputComponent, {\n        className: className,\n        ...eventHandlers,\n        ...rest,\n        \"data-openable\": true // This allows for conditional styling within BpkInput\n      });\n    }\n  }\n  WithOpenEvents.displayName = wrapDisplayName(WithOpenEventsInputComponent, 'withOpenEvents');\n  return WithOpenEvents;\n};\nexport default withOpenEvents;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,eAAe,QAAQ,uBAAuB;AACvD,SAASC,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,MAAMC,QAAQ,GAAG;EACfC,KAAK,EAAE,OAAO;EACdC,QAAQ,EAAE;AACZ,CAAC;AACD,MAAMC,cAAc,GAAGC,QAAQ,IAAIC,CAAC,IAAI;EACtC,IAAIA,CAAC,CAACC,IAAI,KAAKN,QAAQ,CAACC,KAAK,IAAII,CAAC,CAACC,IAAI,KAAKN,QAAQ,CAACE,QAAQ,EAAE;IAC7DG,CAAC,CAACE,cAAc,CAAC,CAAC;IAClB,IAAIH,QAAQ,EAAE;MACZA,QAAQ,CAAC,CAAC;IACZ;EACF;AACF,CAAC;AACD,MAAMI,gBAAgB,GAAGA,CAACC,EAAE,EAAEC,YAAY,KAAKL,CAAC,IAAI;EAClD,IAAII,EAAE,EAAE;IACNA,EAAE,CAACJ,CAAC,CAAC;EACP;EACA,IAAIK,YAAY,EAAE;IAChBA,YAAY,CAACL,CAAC,CAAC;EACjB;AACF,CAAC;AACD,MAAMM,cAAc,GAAGC,4BAA4B,IAAI;EACrD,MAAMC,cAAc,SAASjB,SAAS,CAAC;IACrC,OAAOkB,YAAY,GAAG;MACpB;MACAC,MAAM,EAAE,KAAK;MACbC,eAAe,EAAE,CAAC,EAAE,OAAOC,MAAM,KAAK,WAAW,IAAI,cAAc,IAAIA,MAAM,CAAC;MAC9EC,MAAM,EAAE,IAAI;MACZ;MACAC,OAAO,EAAE,IAAI;MACbC,OAAO,EAAE,IAAI;MACbC,MAAM,EAAE,IAAI;MACZC,UAAU,EAAE,IAAI;MAChBC,SAAS,EAAE,IAAI;MACfC,OAAO,EAAE;IACX,CAAC;IACDC,WAAWA,CAACC,KAAK,EAAE;MACjB,KAAK,CAACA,KAAK,CAAC;MACZ,IAAI,CAACC,YAAY,GAAG,IAAI;IAC1B;IACAC,cAAc,GAAGC,KAAK,IAAI;MACxB;MACA;MACA;MACA;MACA;MACA,IAAIC,QAAQ,IAAID,KAAK,CAACE,MAAM,KAAKD,QAAQ,CAACE,aAAa,EAAE;QACvDH,KAAK,CAACtB,cAAc,CAAC,CAAC;QACtB,IAAI,IAAI,CAACmB,KAAK,CAACR,MAAM,EAAE;UACrB,IAAI,CAACQ,KAAK,CAACR,MAAM,CAAC,CAAC;QACrB;MACF;IACF,CAAC;IACDe,WAAW,GAAGA,CAAA,KAAM;MAClB,IAAI,IAAI,CAACN,YAAY,IAAI,IAAI,CAACD,KAAK,CAACR,MAAM,EAAE;QAC1C,IAAI,CAACQ,KAAK,CAACR,MAAM,CAAC,CAAC;MACrB;IACF,CAAC;IACDgB,UAAU,GAAGA,CAAA,KAAM;MACjB;MACA;MACA,IAAI,IAAI,CAACR,KAAK,CAACX,MAAM,EAAE;QACrB,IAAI,CAACY,YAAY,GAAG,KAAK;MAC3B,CAAC,MAAM;QACL,IAAI,CAACA,YAAY,GAAG,IAAI;MAC1B;IACF,CAAC;IACDQ,MAAMA,CAAA,EAAG;MACP,MAAM;QACJC,SAAS;QACTpB,eAAe;QACfD,MAAM;QACNM,MAAM;QACNF,OAAO;QACPC,OAAO;QACPG,SAAS;QACTC,OAAO;QACPN,MAAM;QACNI,UAAU;QACV,GAAGe;MACL,CAAC,GAAG,IAAI,CAACX,KAAK;MACd,MAAMY,aAAa,GAAG;QACpBnB,OAAO,EAAEX,gBAAgB,CAACU,MAAM,EAAEC,OAAO,CAAC;QAC1C;QACA;QACAI,SAAS,EAAEf,gBAAgB,CAACL,cAAc,CAACe,MAAM,CAAC,EAAEK,SAAS;MAC/D,CAAC;MACD,IAAIP,eAAe,EAAE;QACnB;QACAsB,aAAa,CAACC,QAAQ,GAAG,UAAU;QACnCD,aAAa,CAAC,eAAe,CAAC,GAAG,KAAK;QACtCA,aAAa,CAAChB,UAAU,GAAGd,gBAAgB,CAAC,IAAI,CAACoB,cAAc,EAAEN,UAAU,CAAC;MAC9E;;MAEA;MACA;MACAgB,aAAa,CAAClB,OAAO,GAAGZ,gBAAgB,CAAC,IAAI,CAACyB,WAAW,EAAEb,OAAO,CAAC;MACnEkB,aAAa,CAACjB,MAAM,GAAGb,gBAAgB,CAAC,IAAI,CAAC0B,UAAU,EAAEb,MAAM,CAAC;MAChE,OAAO,aAAatB,IAAI,CAACa,4BAA4B,EAAE;QACrDwB,SAAS,EAAEA,SAAS;QACpB,GAAGE,aAAa;QAChB,GAAGD,IAAI;QACP,eAAe,EAAE,IAAI,CAAC;MACxB,CAAC,CAAC;IACJ;EACF;EACAxB,cAAc,CAAC2B,WAAW,GAAG3C,eAAe,CAACe,4BAA4B,EAAE,gBAAgB,CAAC;EAC5F,OAAOC,cAAc;AACvB,CAAC;AACD,eAAeF,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}