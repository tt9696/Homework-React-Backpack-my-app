{"ast":null,"code":"/*\n * Backpack - Skyscanner's Design System\n *\n * Copyright 2016 Skyscanner Ltd\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport PropTypes from 'prop-types';\nexport const CLEAR_BUTTON_MODES = {\n  never: 'never',\n  whileEditing: 'whileEditing',\n  always: 'always'\n};\nexport const INPUT_TYPES = {\n  text: 'text',\n  email: 'email',\n  number: 'number',\n  password: 'password',\n  tel: 'tel'\n};\n\n// Declaring this type here as react docgen gets confused and reads them as native input types\n\n// TODO - this function should be removed once all input examples have been migrated to TS\nexport const clearablePropType = (props, propName, componentName) => {\n  const createError = message => new Error(`Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. ${message}.`);\n  const propBeingChecked = props[propName];\n  if (props.clearButtonMode && props.clearButtonMode !== CLEAR_BUTTON_MODES.never) {\n    if (!propBeingChecked) {\n      return createError(`When \\`clearButtonMode\\` is not 'never', \\`${propName}\\` must be supplied`);\n    }\n    switch (propName) {\n      case 'clearButtonLabel':\n        return typeof propBeingChecked === 'string' ? null : createError(`\\`clearButtonLabel\\` must be a string`);\n      case 'onClear':\n        return typeof propBeingChecked === 'function' ? null : createError(`\\`onClear\\` must be a function`);\n      default:\n        return null;\n    }\n  }\n  return null;\n};\n\n// TODO - this should be removed once all input examples have been migrated to TS\nexport const propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.oneOf([INPUT_TYPES.text, INPUT_TYPES.email, INPUT_TYPES.number, INPUT_TYPES.password, INPUT_TYPES.tel]),\n  className: PropTypes.string,\n  valid: PropTypes.bool,\n  large: PropTypes.bool,\n  docked: PropTypes.bool,\n  dockedFirst: PropTypes.bool,\n  dockedMiddle: PropTypes.bool,\n  dockedLast: PropTypes.bool,\n  inputRef: PropTypes.func,\n  clearButtonMode: PropTypes.oneOf(Object.keys(CLEAR_BUTTON_MODES)),\n  clearButtonLabel: clearablePropType,\n  onClear: clearablePropType\n};\n\n// TODO - this should be removed once all input examples have been migrated to TS\nexport const defaultProps = {\n  type: INPUT_TYPES.text,\n  valid: null,\n  large: false,\n  docked: false,\n  dockedFirst: false,\n  dockedMiddle: false,\n  dockedLast: false,\n  inputRef: null,\n  clearButtonMode: CLEAR_BUTTON_MODES.never,\n  clearButtonLabel: null,\n  onClear: null\n};","map":{"version":3,"names":["PropTypes","CLEAR_BUTTON_MODES","never","whileEditing","always","INPUT_TYPES","text","email","number","password","tel","clearablePropType","props","propName","componentName","createError","message","Error","propBeingChecked","clearButtonMode","propTypes","id","string","isRequired","name","value","type","oneOf","className","valid","bool","large","docked","dockedFirst","dockedMiddle","dockedLast","inputRef","func","Object","keys","clearButtonLabel","onClear","defaultProps"],"sources":["C:/Users/Dell/my-app/node_modules/@skyscanner/backpack-web/bpk-component-input/src/common-types.js"],"sourcesContent":["/*\n * Backpack - Skyscanner's Design System\n *\n * Copyright 2016 Skyscanner Ltd\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport PropTypes from 'prop-types';\nexport const CLEAR_BUTTON_MODES = {\n  never: 'never',\n  whileEditing: 'whileEditing',\n  always: 'always'\n};\nexport const INPUT_TYPES = {\n  text: 'text',\n  email: 'email',\n  number: 'number',\n  password: 'password',\n  tel: 'tel'\n};\n\n// Declaring this type here as react docgen gets confused and reads them as native input types\n\n// TODO - this function should be removed once all input examples have been migrated to TS\nexport const clearablePropType = (props, propName, componentName) => {\n  const createError = message => new Error(`Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. ${message}.`);\n  const propBeingChecked = props[propName];\n  if (props.clearButtonMode && props.clearButtonMode !== CLEAR_BUTTON_MODES.never) {\n    if (!propBeingChecked) {\n      return createError(`When \\`clearButtonMode\\` is not 'never', \\`${propName}\\` must be supplied`);\n    }\n    switch (propName) {\n      case 'clearButtonLabel':\n        return typeof propBeingChecked === 'string' ? null : createError(`\\`clearButtonLabel\\` must be a string`);\n      case 'onClear':\n        return typeof propBeingChecked === 'function' ? null : createError(`\\`onClear\\` must be a function`);\n      default:\n        return null;\n    }\n  }\n  return null;\n};\n\n// TODO - this should be removed once all input examples have been migrated to TS\nexport const propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.oneOf([INPUT_TYPES.text, INPUT_TYPES.email, INPUT_TYPES.number, INPUT_TYPES.password, INPUT_TYPES.tel]),\n  className: PropTypes.string,\n  valid: PropTypes.bool,\n  large: PropTypes.bool,\n  docked: PropTypes.bool,\n  dockedFirst: PropTypes.bool,\n  dockedMiddle: PropTypes.bool,\n  dockedLast: PropTypes.bool,\n  inputRef: PropTypes.func,\n  clearButtonMode: PropTypes.oneOf(Object.keys(CLEAR_BUTTON_MODES)),\n  clearButtonLabel: clearablePropType,\n  onClear: clearablePropType\n};\n\n// TODO - this should be removed once all input examples have been migrated to TS\nexport const defaultProps = {\n  type: INPUT_TYPES.text,\n  valid: null,\n  large: false,\n  docked: false,\n  dockedFirst: false,\n  dockedMiddle: false,\n  dockedLast: false,\n  inputRef: null,\n  clearButtonMode: CLEAR_BUTTON_MODES.never,\n  clearButtonLabel: null,\n  onClear: null\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}