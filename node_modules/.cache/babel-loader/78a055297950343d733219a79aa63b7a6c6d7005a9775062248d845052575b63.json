{"ast":null,"code":"/*\n * Backpack - Skyscanner's Design System\n *\n * Copyright 2016 Skyscanner Ltd\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */import PropTypes from 'prop-types';\nimport { cloneElement } from 'react';\nimport { cssModules } from \"../../bpk-react-utils\";\nimport STYLES from \"./BpkSelect.module.css\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst getClassName = cssModules(STYLES);\nconst BpkSelect = props => {\n  const {\n    className,\n    disabled,\n    docked,\n    dockedFirst,\n    dockedLast,\n    dockedMiddle,\n    image,\n    large,\n    valid,\n    wrapperClassName,\n    ...rest\n  } = props;\n\n  // Explicit check for false primitive value as undefined is\n  // treated as neither valid nor invalid\n  const isInvalid = valid === false;\n  const select = /*#__PURE__*/\n  // $FlowFixMe[cannot-spread-inexact] - inexact rest. See 'decisions/flowfixme.md'.\n  _jsx(\"select\", {\n    className: getClassName('bpk-select', large && 'bpk-select--large', docked && 'bpk-select--docked', dockedFirst && 'bpk-select--docked-first', dockedMiddle && 'bpk-select--docked-middle', dockedLast && 'bpk-select--docked-last', isInvalid && 'bpk-select--invalid', image && 'bpk-select--with-image', image && large && 'bpk-select--with-image-large', className),\n    disabled: disabled,\n    \"aria-invalid\": isInvalid,\n    ...rest\n  });\n  if (image) {\n    return /*#__PURE__*/_jsxs(\"div\", {\n      className: getClassName('bpk-select-wrapper', wrapperClassName),\n      children: [/*#__PURE__*/cloneElement(image, {\n        'aria-hidden': true,\n        className: getClassName('bpk-select-wrapper__image', large && 'bpk-select-wrapper__image--large', disabled && 'bpk-select-wrapper__image--disabled', image.props.className)\n      }), select]\n    });\n  }\n  return select;\n};\nBpkSelect.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  /**\n   * The \"value\" prop is only relevant if the user is wanting a controlled component\n   * In some cases, users may want to create an uncontrolled select as described here: https://beta.reactjs.org/reference/react-dom/components/select\n   * In this case value is not required and nor should it be given a default value (as the linter thinks)\n   * Prop types are not expressive enough (without a drastic increase in complexity of writing a custom validator) to encode this relationship. Equally, this wouldn't actually solve the linting issue (AFAIK).\n   * As a solution, the require-default-props has been disabled for this line.\n   */\n\n  value: PropTypes.string,\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n  docked: PropTypes.bool,\n  dockedFirst: PropTypes.bool,\n  dockedLast: PropTypes.bool,\n  dockedMiddle: PropTypes.bool,\n  image: PropTypes.node,\n  large: PropTypes.bool,\n  valid: PropTypes.bool,\n  wrapperClassName: PropTypes.string\n};\nBpkSelect.defaultProps = {\n  className: null,\n  docked: false,\n  dockedFirst: false,\n  dockedLast: false,\n  dockedMiddle: false,\n  disabled: false,\n  image: null,\n  large: false,\n  valid: null,\n  wrapperClassName: null\n};\nexport default BpkSelect;","map":{"version":3,"names":["PropTypes","cloneElement","cssModules","STYLES","jsx","_jsx","jsxs","_jsxs","getClassName","BpkSelect","props","className","disabled","docked","dockedFirst","dockedLast","dockedMiddle","image","large","valid","wrapperClassName","rest","isInvalid","select","children","propTypes","id","string","isRequired","name","value","bool","node","defaultProps"],"sources":["C:/Users/Dell/my-app/node_modules/@skyscanner/backpack-web/bpk-component-select/src/BpkSelect.js"],"sourcesContent":["/*\n * Backpack - Skyscanner's Design System\n *\n * Copyright 2016 Skyscanner Ltd\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */import PropTypes from 'prop-types';\nimport { cloneElement } from 'react';\nimport { cssModules } from \"../../bpk-react-utils\";\nimport STYLES from \"./BpkSelect.module.css\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst getClassName = cssModules(STYLES);\nconst BpkSelect = props => {\n  const {\n    className,\n    disabled,\n    docked,\n    dockedFirst,\n    dockedLast,\n    dockedMiddle,\n    image,\n    large,\n    valid,\n    wrapperClassName,\n    ...rest\n  } = props;\n\n  // Explicit check for false primitive value as undefined is\n  // treated as neither valid nor invalid\n  const isInvalid = valid === false;\n  const select =\n  /*#__PURE__*/\n  // $FlowFixMe[cannot-spread-inexact] - inexact rest. See 'decisions/flowfixme.md'.\n  _jsx(\"select\", {\n    className: getClassName('bpk-select', large && 'bpk-select--large', docked && 'bpk-select--docked', dockedFirst && 'bpk-select--docked-first', dockedMiddle && 'bpk-select--docked-middle', dockedLast && 'bpk-select--docked-last', isInvalid && 'bpk-select--invalid', image && 'bpk-select--with-image', image && large && 'bpk-select--with-image-large', className),\n    disabled: disabled,\n    \"aria-invalid\": isInvalid,\n    ...rest\n  });\n  if (image) {\n    return /*#__PURE__*/_jsxs(\"div\", {\n      className: getClassName('bpk-select-wrapper', wrapperClassName),\n      children: [/*#__PURE__*/cloneElement(image, {\n        'aria-hidden': true,\n        className: getClassName('bpk-select-wrapper__image', large && 'bpk-select-wrapper__image--large', disabled && 'bpk-select-wrapper__image--disabled', image.props.className)\n      }), select]\n    });\n  }\n  return select;\n};\nBpkSelect.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  /**\n   * The \"value\" prop is only relevant if the user is wanting a controlled component\n   * In some cases, users may want to create an uncontrolled select as described here: https://beta.reactjs.org/reference/react-dom/components/select\n   * In this case value is not required and nor should it be given a default value (as the linter thinks)\n   * Prop types are not expressive enough (without a drastic increase in complexity of writing a custom validator) to encode this relationship. Equally, this wouldn't actually solve the linting issue (AFAIK).\n   * As a solution, the require-default-props has been disabled for this line.\n   */\n\n  value: PropTypes.string,\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n  docked: PropTypes.bool,\n  dockedFirst: PropTypes.bool,\n  dockedLast: PropTypes.bool,\n  dockedMiddle: PropTypes.bool,\n  image: PropTypes.node,\n  large: PropTypes.bool,\n  valid: PropTypes.bool,\n  wrapperClassName: PropTypes.string\n};\nBpkSelect.defaultProps = {\n  className: null,\n  docked: false,\n  dockedFirst: false,\n  dockedLast: false,\n  dockedMiddle: false,\n  disabled: false,\n  image: null,\n  large: false,\n  valid: null,\n  wrapperClassName: null\n};\nexport default BpkSelect;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}